// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['CellView', 'tmpl!newLevel'], function(CellView, newLevelTmpl) {
    var LevelView;
    return LevelView = (function(_super) {

      __extends(LevelView, _super);

      function LevelView() {
        return LevelView.__super__.constructor.apply(this, arguments);
      }

      LevelView.prototype.className = 'row-fluid level';

      LevelView.prototype.events = {
        'click .col-model': 'mkLevelDividers'
      };

      LevelView.prototype.initialize = function() {
        return this.id = this.options.id;
      };

      LevelView.prototype.render = function() {
        var frag;
        if (this.options.cells != null) {
          frag = document.createDocumentFragment();
          _(this.options.cells).each(function(cell, iter) {
            var cellView;
            cellView = new CellView(cell);
            return frag.appendChild(cellView.render().el);
          });
          this.$el.html(frag);
        } else {
          this.$el.html(newLevelTmpl());
        }
        return this;
      };

      LevelView.prototype.mkLevelDividers = function(evt) {
        var $target, widths;
        $target = $(evt.currentTarget);
        widths = _($target.attr('class').match('colsize-(.*)?')[1].split('-')).map(function(obj) {
          return parseInt(obj);
        });
        return Backbone.Events.trigger('chooseNewLevelDividers', widths, this.id);
      };

      return LevelView;

    })(Backbone.View);
  });

}).call(this);
